package com.g2inc.scap.editor.gui.windows.xccdf;

/* ESCAPE Software   Copyright 2010 G2, Inc. - All rights reserved.
*
* ESCAPE is open source software distributed under GNU General Public License Version 3.  ESCAPE is not in the public domain 
* and G2, Inc. holds its copyright.  Redistribution and use in source and binary forms, with or without modification, are
* permitted provided that the following conditions are met:

* 1. Redistributions of ESCAPE source code must retain the above copyright notice, this list of conditions and the following disclaimer. 
* 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the ESCAPE Software distribution. 
* 3. Neither the name of G2, Inc. nor the names of any contributors may be used to endorse or promote products derived from this software without specific prior written permission. 

* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
* INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL G2, INC., THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.

* You should have received a copy of the GNU General Public License Version 3 along with this program. 
* If not, see http://www.gnu.org/licenses/ for a copy.
*/

import javax.swing.JFrame;
import java.util.List;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

import org.apache.log4j.Logger;

import com.g2inc.scap.editor.gui.windows.common.ChangeNotifierPanel;
import com.g2inc.scap.library.domain.xccdf.SelElement;
import com.g2inc.scap.library.domain.xccdf.SelValueElement;
import com.g2inc.scap.library.domain.xccdf.ChoicesElement;
import com.g2inc.scap.library.domain.xccdf.Value;
import com.g2inc.scap.library.domain.xccdf.ValueTypeEnum;

public class ValueRestrictionsDetailTab extends ChangeNotifierPanel implements ChangeListener
{
    private static final Logger LOG = Logger.getLogger(ValueRestrictionsDetailTab.class);
    private Value value = null;
    private JFrame parentWin = null;

    private void initComponents2()
    {
        matchSelectorListPanel.addChangeListener(this);
        matchSelectorListPanel.setElementName("match");
        
        lowerBoundSelectorListPanel.addChangeListener(this);
        lowerBoundSelectorListPanel.setElementName("lower-bound");
        
        upperBoundSelectorListPanel.addChangeListener(this);
        upperBoundSelectorListPanel.setElementName("upper-bound");
        
        choicesListPanel1.addChangeListener(this);

    }
    /** Creates new form DefinitionDetailTab */
    public ValueRestrictionsDetailTab()
    {
        initComponents();
        initComponents2();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        matchSelectorListPanel = new com.g2inc.scap.editor.gui.windows.xccdf.ValueSelectorListPanel();
        upperBoundSelectorListPanel = new com.g2inc.scap.editor.gui.windows.xccdf.ValueSelectorListPanel();
        lowerBoundSelectorListPanel = new com.g2inc.scap.editor.gui.windows.xccdf.ValueSelectorListPanel();
        choicesListPanel1 = new com.g2inc.scap.editor.gui.windows.xccdf.ChoicesListPanel();

        matchSelectorListPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Match"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.25;
        add(matchSelectorListPanel, gridBagConstraints);

        upperBoundSelectorListPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Upper Bounds"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.25;
        add(upperBoundSelectorListPanel, gridBagConstraints);

        lowerBoundSelectorListPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Lower Bounds"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.25;
        add(lowerBoundSelectorListPanel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.25;
        add(choicesListPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.g2inc.scap.editor.gui.windows.xccdf.ChoicesListPanel choicesListPanel1;
    private com.g2inc.scap.editor.gui.windows.xccdf.ValueSelectorListPanel lowerBoundSelectorListPanel;
    private com.g2inc.scap.editor.gui.windows.xccdf.ValueSelectorListPanel matchSelectorListPanel;
    private com.g2inc.scap.editor.gui.windows.xccdf.ValueSelectorListPanel upperBoundSelectorListPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public JFrame getParentWin()
    {
        return parentWin;
    }

    @Override
    public void setParentWin(JFrame parentWin)
    {
        this.parentWin = parentWin;
    }

    @Override
    public void stateChanged(ChangeEvent ce)
    {
        Object eventSource = ce.getSource();
        if (eventSource == matchSelectorListPanel) {
            List<SelValueElement> list = matchSelectorListPanel.getDoc();
            value.setMatchList(list);
        } else if (eventSource == lowerBoundSelectorListPanel) {
            List<SelValueElement> list = lowerBoundSelectorListPanel.getDoc();
            value.setLowerBoundList(list);
        } else if (eventSource == upperBoundSelectorListPanel) {
            List<SelValueElement> list = upperBoundSelectorListPanel.getDoc();
            value.setUpperBoundList(list);
        } else if (eventSource == choicesListPanel1) {
            List<ChoicesElement> list = choicesListPanel1.getDoc();
            value.setChoiceList(list);
        } else {
            throw new IllegalArgumentException("Restrictions panel stateChanged called with unknown change event, source = " + eventSource.toString());
        }
        notifyRegisteredListeners();
    }

    public void setDoc(Value value)
    {
        this.value = value;
        
        if (value.getType() == ValueTypeEnum.NUMBER) {
            matchSelectorListPanel.removeChangeListener(this);
            matchSelectorListPanel.setVisible(false);
            
            lowerBoundSelectorListPanel.setDoc(value.getLowerBoundList());
            upperBoundSelectorListPanel.setDoc(value.getUpperBoundList());
        } else {
            lowerBoundSelectorListPanel.removeChangeListener(this);
            upperBoundSelectorListPanel.removeChangeListener(this);
            
            lowerBoundSelectorListPanel.setVisible(false);
            upperBoundSelectorListPanel.setVisible(false);
            
            matchSelectorListPanel.setDoc(value.getMatchList());
        }
        choicesListPanel1.setDoc(value.getChoiceList());
    }
}
