package com.g2inc.scap.editor.gui.windows.oval.definition;

/* Copyright (c) 2016 - 2016. VMware, Inc. All rights reserved.
* 
* This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License version 3.0 
* as published by the FreeSoftware Foundation This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
* without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License version 3.0 
* for more details. You should have received a copy of the GNU General Public License version 3.0 along with this program; if not, write to
* the Free Software Foundation, Inc., 675 Mass Avenue, Cambridge, MA 02139, USA.
*/
 
/* ESCAPE Software Copyright 2010 G2, Inc. - All rights reserved.
*
* ESCAPE is open source software distributed under GNU General Public License Version 3.  ESCAPE is not in the public domain 
* and G2, Inc. holds its copyright.  Redistribution and use in source and binary forms, with or without modification, are
* permitted provided that the following conditions are met:

* 1. Redistributions of ESCAPE source code must retain the above copyright notice, this list of conditions and the following disclaimer. 
* 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the ESCAPE Software distribution. 
* 3. Neither the name of G2, Inc. nor the names of any contributors may be used to endorse or promote products derived from this software without specific prior written permission. 

* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
* INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL G2, INC., THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.

* You should have received a copy of the GNU General Public License Version 3 along with this program. 
* If not, see http://www.gnu.org/licenses/ for a copy.
*/

import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

import com.g2inc.scap.editor.gui.cellrenderers.tree.oval.metadata.DefinitionMetadataTreeCellRenderer;
import com.g2inc.scap.editor.gui.model.tree.oval.metadata.MetadataTreeModel;
import com.g2inc.scap.editor.gui.model.tree.oval.metadata.impl.oval53.Oval53MetadataTreeModel;
import com.g2inc.scap.editor.gui.model.tree.oval.metadata.impl.oval54.Oval54MetadataTreeModel;
import com.g2inc.scap.editor.gui.model.tree.oval.metadata.impl.oval55.Oval55MetadataTreeModel;
import com.g2inc.scap.editor.gui.model.tree.oval.metadata.impl.oval56.Oval56MetadataTreeModel;
import com.g2inc.scap.editor.gui.model.tree.oval.metadata.impl.oval57.Oval57MetadataTreeModel;
import com.g2inc.scap.editor.gui.util.EditorUtil;
import com.g2inc.scap.editor.gui.windows.EditorMainWindow;
import com.g2inc.scap.editor.gui.windows.oval.OvalTab;
import com.g2inc.scap.library.domain.SCAPDocumentTypeEnum;
import com.g2inc.scap.library.domain.oval.OvalDefinition;

public class DefinitionMetadataDetailTab extends OvalTab implements ChangeListener
{
    private static final long serialVersionUID = 1L;

    private OvalDefinition doc = null;
    private DefinitionSourceDetailTab sourceTab = null;

    public DefinitionSourceDetailTab getSourceTab()
    {
        return sourceTab;
    }

    public void setSourceTab(DefinitionSourceDetailTab sourceTab)
    {
        this.sourceTab = sourceTab;
    }

    private void initComponents2()
    {
    }

    /** Creates new form DefinitionDetailTab */
    public DefinitionMetadataDetailTab()
    {
        initComponents();
        initComponents2();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        metadataPanel = new javax.swing.JPanel();
        mdePanel = new com.g2inc.scap.editor.gui.windows.oval.definition.MetaDataEditingPanel();

        setLayout(new java.awt.GridBagLayout());

        metadataPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Metadata", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), java.awt.SystemColor.windowText)); // NOI18N
        metadataPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        metadataPanel.add(mdePanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.4;
        add(metadataPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.g2inc.scap.editor.gui.windows.oval.definition.MetaDataEditingPanel mdePanel;
    private javax.swing.JPanel metadataPanel;
    // End of variables declaration//GEN-END:variables

    // End of variables declaration

    public OvalDefinition getDoc()
    {
        return doc;
    }

    public void setDoc(OvalDefinition doc, SCAPDocumentTypeEnum docType)
    {
        this.doc = doc;

        mdePanel.addChangeListener(this);
        mdePanel.setTreeCellRenderer(new DefinitionMetadataTreeCellRenderer());
        mdePanel.setMetadata(doc.getMetadata());
        
        MetadataTreeModel mtm = null;

        switch (docType) {
 
            case OVAL_511:
                mtm = new Oval57MetadataTreeModel(doc);
                break; 
            default:
            	throw new IllegalStateException("Unknown OVAL type: " + docType);
        }
        mdePanel.setTreeModel(mtm);
    }

    private void updateSource()
    {
        sourceTab.setXMLSource(elementToString(doc.getElement()));
    }

    @Override
    public void stateChanged(ChangeEvent e)
    {
        Object o = e.getSource();

        if(o == mdePanel)
        {
            updateSource();
            EditorUtil.markActiveWindowDirty(EditorMainWindow.getInstance(), true);
        }
    }
}
