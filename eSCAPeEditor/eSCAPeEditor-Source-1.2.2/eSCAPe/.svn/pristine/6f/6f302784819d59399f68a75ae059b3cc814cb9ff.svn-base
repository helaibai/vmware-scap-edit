package com.g2inc.scap.editor.gui.dialogs.editors.oval.ovalref;
/* ESCAPE Software Copyright 2010 G2, Inc. - All rights reserved.
*
* ESCAPE is open source software distributed under GNU General Public License Version 3.  ESCAPE is not in the public domain 
* and G2, Inc. holds its copyright.  Redistribution and use in source and binary forms, with or without modification, are
* permitted provided that the following conditions are met:

* 1. Redistributions of ESCAPE source code must retain the above copyright notice, this list of conditions and the following disclaimer. 
* 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the ESCAPE Software distribution. 
* 3. Neither the name of G2, Inc. nor the names of any contributors may be used to endorse or promote products derived from this software without specific prior written permission. 

* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
* INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL G2, INC., THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.

* You should have received a copy of the GNU General Public License Version 3 along with this program. 
* If not, see http://www.gnu.org/licenses/ for a copy.
*/

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.DefaultComboBoxModel;

import com.g2inc.scap.editor.gui.dialogs.editors.EditorDialog;
import com.g2inc.scap.editor.gui.dialogs.editors.IEditorPage;
import com.g2inc.scap.editor.gui.resources.EditorMessages;
import com.g2inc.scap.library.domain.oval.OvalReference;

public class OvalReferenceEditor extends javax.swing.JPanel implements IEditorPage
{

    private EditorDialog parentEditor = null;
    private OvalReference ovalRef = null;

    private void initTextFields()
    {
    }

    private void initCombos()
    {
        DefaultComboBoxModel model = new DefaultComboBoxModel();

        sourcesCombo.setModel(model);

        model.addElement(EditorMessages.CCE);
        model.addElement(EditorMessages.CPE);
        model.addElement(EditorMessages.CVE);

        sourcesCombo.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
               DefaultComboBoxModel mod = (DefaultComboBoxModel) sourcesCombo.getModel();

               String selected = (String) mod.getSelectedItem();

               if(mod.getIndexOf(selected) == -1 && selected.length() > 0)
               {
                   mod.addElement(selected);
               }
            }
        });
    }

    private void initComponents2()
    {
        initTextFields();
        initCombos();
    }

    /** Creates new form RegexDatatypeEditor */
    public OvalReferenceEditor()
    {
        initComponents();
        initComponents2();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        sourceCaption = new javax.swing.JLabel();
        sourcesCombo = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        referenceIdCaption = new javax.swing.JLabel();
        referenceIdTextField = new javax.swing.JTextField();
        referenceURLCaption = new javax.swing.JLabel();
        referenceURLTextField = new javax.swing.JTextField();

        setMinimumSize(new java.awt.Dimension(351, 87));
        setPreferredSize(new java.awt.Dimension(351, 87));
        setLayout(new java.awt.GridBagLayout());

        sourceCaption.setText("Source");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 5, 5);
        add(sourceCaption, gridBagConstraints);

        sourcesCombo.setEditable(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.5;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        add(sourcesCombo, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(jPanel1, gridBagConstraints);

        referenceIdCaption.setText("Reference Id");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 10, 0, 5);
        add(referenceIdCaption, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 6);
        add(referenceIdTextField, gridBagConstraints);

        referenceURLCaption.setText("URL");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(3, 10, 4, 0);
        add(referenceURLCaption, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 4, 6);
        add(referenceURLTextField, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel referenceIdCaption;
    private javax.swing.JTextField referenceIdTextField;
    private javax.swing.JLabel referenceURLCaption;
    private javax.swing.JTextField referenceURLTextField;
    private javax.swing.JLabel sourceCaption;
    private javax.swing.JComboBox sourcesCombo;
    // End of variables declaration//GEN-END:variables

    public Object getData()
    {
        ovalRef.setSource((String)sourcesCombo.getSelectedItem());
        ovalRef.setRefId(referenceIdTextField.getText());
        ovalRef.setRefUrl(referenceURLTextField.getText());
        return ovalRef;
    }

    public void setEditorDialog(EditorDialog editorDialog)
    {
        parentEditor = editorDialog;
        parentEditor.setTitle("Reference Editor");
    }

    public void setData(Object data)
    {
        OvalReference or = (OvalReference)data;

        this.ovalRef = or;

        DefaultComboBoxModel comboModel = (DefaultComboBoxModel) sourcesCombo.getModel();

        String source = or.getSource();
        if(source != null)
        {
            if(comboModel.getIndexOf(source) == -1)
            {
                // add the new source
                comboModel.addElement(source);
            }
            comboModel.setSelectedItem(source);
        }
        else
        {
            comboModel.setSelectedItem("");
        }
        
        referenceIdTextField.setText(or.getRefId());

        String refUrl = or.getRefUrl();

        if(refUrl != null)
        {
            referenceURLTextField.setText(refUrl);
        }
        else
        {
            referenceURLTextField.setText("");
        }
    }
}
