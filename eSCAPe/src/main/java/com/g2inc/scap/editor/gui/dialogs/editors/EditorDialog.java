package com.g2inc.scap.editor.gui.dialogs.editors;
/* ESCAPE Software Copyright 2010 G2, Inc. - All rights reserved.
*
* ESCAPE is open source software distributed under GNU General Public License Version 3.  ESCAPE is not in the public domain 
* and G2, Inc. holds its copyright.  Redistribution and use in source and binary forms, with or without modification, are
* permitted provided that the following conditions are met:

* 1. Redistributions of ESCAPE source code must retain the above copyright notice, this list of conditions and the following disclaimer. 
* 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the ESCAPE Software distribution. 
* 3. Neither the name of G2, Inc. nor the names of any contributors may be used to endorse or promote products derived from this software without specific prior written permission. 

* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
* INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL G2, INC., THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.

* You should have received a copy of the GNU General Public License Version 3 along with this program. 
* If not, see http://www.gnu.org/licenses/ for a copy.
*/

import com.g2inc.scap.editor.gui.dialogs.editors.xccdf.FixTextEditor;
import java.awt.GridBagConstraints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JPanel;
import com.g2inc.scap.library.domain.xccdf.FixText;

import org.apache.log4j.Logger;

/**
 * This dialog is to be used in conjunction with an appropriate implementation of
 * IEditorPage to allow the user the enter/edit an existing item or piece of data
 * the bulk of the work is actually implemented in the page implemenation.
 *
 * @author ssill
 * see scap.gui.dialogs.editors.IEditorPage
 */
public class EditorDialog extends javax.swing.JDialog implements ActionListener
{
    private static Logger log = Logger.getLogger(EditorDialog.class);
    
    private IEditorPage editorPage = null;
    private boolean cancelled = true;

    public void actionPerformed(ActionEvent ae)
    {
        Object src = ae.getSource();
        if (editorPage != null && editorPage instanceof FixTextEditor) {
            FixTextEditor fixTextEditor = (FixTextEditor) editorPage;
            FixText fixText = (FixText) fixTextEditor.getData();
         //   log.debug("actionPerformed for FixTextEditor, complexity: " + fixText.getComplexity());
        }
        if(src == okButton)
        {
            cancelled = false;
        }

        setVisible(false);
    }

    private void initButtonActions()
    {
        cancelButton.addActionListener(this);
        okButton.addActionListener(this);
    }

    private void initComponents2()
    {
        initButtonActions();
    }

    /** Creates new form EditorDialogAbstract */
    public EditorDialog(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
        initComponents2();
        setLocationRelativeTo(parent);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        bodyPanel = new javax.swing.JPanel();
        footerPanel = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setModal(true);
        setName("EditorDialog"); // NOI18N
        getContentPane().setLayout(new java.awt.GridBagLayout());

        bodyPanel.setAutoscrolls(true);
        bodyPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.9;
        getContentPane().add(bodyPanel, gridBagConstraints);

        footerPanel.setAutoscrolls(true);
        footerPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        footerPanel.add(jSeparator1, gridBagConstraints);

        okButton.setText("OK");
        okButton.setName("ok_button"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(4, 10, 5, 0);
        footerPanel.add(okButton, gridBagConstraints);

        cancelButton.setText("Cancel");
        cancelButton.setName("cancel_button"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 5, 10);
        footerPanel.add(cancelButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(footerPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel footerPanel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables


    public void enableOkButton()
    {
        okButton.setEnabled(true);
    }

    public void disableOkButton()
    {
        okButton.setEnabled(false);
    }

    public JButton getOKButton()
    {
    	return okButton;
    }
    
    public JButton getCancelButton()
    {
    	return cancelButton;
    }
    
    public void setData(Object data)
    {

        if(editorPage != null)
        {
            editorPage.setData(data);
        }
    }

    public boolean wasCancelled()
    {
        return cancelled;
    }

    public Object getData()
    {
        return editorPage.getData();
    }

    public void setEditorPage(IEditorPage page)
    {
        editorPage = page;
        
        editorPage.setEditorDialog(this);

        //page.setData(data);
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.fill = GridBagConstraints.BOTH;
        gbc.gridheight = 1;
        gbc.gridwidth = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;

        bodyPanel.add((JPanel)page, gbc);
        validate();
    }
    
    public IEditorPage getEditorPage() 
    {
    	return editorPage;
    }
}
