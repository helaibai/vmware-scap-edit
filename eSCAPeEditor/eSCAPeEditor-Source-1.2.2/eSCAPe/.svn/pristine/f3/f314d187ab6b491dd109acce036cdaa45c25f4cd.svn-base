package com.g2inc.scap.editor.gui.windows.merger.oval;

import java.awt.FontMetrics;
import java.util.List;

import javax.swing.JTable;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import com.g2inc.scap.editor.gui.dialogs.editors.IDisplayPage;
import com.g2inc.scap.editor.gui.model.table.merger.oval.OvalMergerTableModel;
import com.g2inc.scap.library.domain.oval.MergeStats;

public class OvalMergerMessagePanel extends javax.swing.JPanel implements IDisplayPage
{
    private static final long serialVersionUID = 1L;

    public static final String WINDOW_TITLE = "OVAL Merger Results";
    
    private void initTableData(List<String> data)
    {
        OvalMergerTableModel model = new OvalMergerTableModel(data);
        messageTable.setModel(model);
        resizeTableColumns(messageTable);
    }

    public OvalMergerMessagePanel()
    {
        initComponents();
    }

    @Override
    public void setData(Object obj)
    {
        MergeStats mergeStats = (MergeStats) obj;
        
        definitionsMergedLabel.setText(Integer.toString(mergeStats.getDefsMerged()));
        testsMergedLabel.setText(Integer.toString(mergeStats.getTestsMerged()));
        objectsMergedLabel.setText(Integer.toString(mergeStats.getObjectsMerged()));
        statesMergedLabel.setText(Integer.toString(mergeStats.getStatesMerged()));
        variablesMergedLabel.setText(Integer.toString(mergeStats.getVariablesMerged()));
        
        initTableData(mergeStats.getWarnings());
    }

   public void resizeTableColumns(JTable table) {
      table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
      TableColumn c = null;
      FontMetrics fm = table.getFontMetrics(table.getFont());
      for (int i=0; i<table.getColumnCount(); i++) {
         c = table.getColumn(table.getColumnName(i));
         c.setPreferredWidth(determineColumnWidth(c, table.getModel(), fm));
      }
   }

    public int determineColumnWidth(TableColumn col, TableModel model,
                                          FontMetrics fm) {
      String value = (String)col.getHeaderValue();
      int headerWidth = fm.stringWidth("." + value.trim() + ".");
      int columnNumber = col.getModelIndex();
      int max = headerWidth;
      int columnWidth = 0;
      int nrows = model.getRowCount();
      for (int i=0; i<nrows; i++) {
         value = (String)model.getValueAt(i, columnNumber);
         columnWidth = fm.stringWidth("." + value.trim() + ".");
         if (columnWidth > max) max = columnWidth;
      }
      return max + 5;
   }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        statisticsPanel = new javax.swing.JPanel();
        definitionsMergedCaption = new javax.swing.JLabel();
        definitionsMergedLabel = new javax.swing.JLabel();
        testsMergedCaption = new javax.swing.JLabel();
        testsMergedLabel = new javax.swing.JLabel();
        objectsMergedCaption = new javax.swing.JLabel();
        objectsMergedLabel = new javax.swing.JLabel();
        statesMergedCaption = new javax.swing.JLabel();
        statesMergedLabel = new javax.swing.JLabel();
        variablesMergedCaption = new javax.swing.JLabel();
        variablesMergedLabel = new javax.swing.JLabel();
        messagesJScrollPane = new javax.swing.JScrollPane();
        messageTable = new javax.swing.JTable();

        setMinimumSize(new java.awt.Dimension(375, 307));
        setPreferredSize(new java.awt.Dimension(375, 307));
        setLayout(new java.awt.GridBagLayout());

        statisticsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Statistics"));
        statisticsPanel.setLayout(new java.awt.GridBagLayout());

        definitionsMergedCaption.setLabelFor(definitionsMergedLabel);
        definitionsMergedCaption.setText("Definitions Merged:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        statisticsPanel.add(definitionsMergedCaption, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.7;
        statisticsPanel.add(definitionsMergedLabel, gridBagConstraints);

        testsMergedCaption.setText("Tests Merged:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        statisticsPanel.add(testsMergedCaption, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.7;
        statisticsPanel.add(testsMergedLabel, gridBagConstraints);

        objectsMergedCaption.setText("Objects Merged:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        statisticsPanel.add(objectsMergedCaption, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.7;
        statisticsPanel.add(objectsMergedLabel, gridBagConstraints);

        statesMergedCaption.setText("States Merged:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        statisticsPanel.add(statesMergedCaption, gridBagConstraints);

        statesMergedLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statesMergedLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.7;
        statisticsPanel.add(statesMergedLabel, gridBagConstraints);

        variablesMergedCaption.setText("Variables Merged:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        statisticsPanel.add(variablesMergedCaption, gridBagConstraints);

        variablesMergedLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        variablesMergedLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        statisticsPanel.add(variablesMergedLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 5, 6);
        add(statisticsPanel, gridBagConstraints);

        messagesJScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Messages"));
        messagesJScrollPane.setMaximumSize(null);
        messagesJScrollPane.setMinimumSize(null);

        messageTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        messageTable.setMaximumSize(null);
        messageTable.setMinimumSize(null);
        messageTable.setPreferredSize(null);
        messagesJScrollPane.setViewportView(messageTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 5, 6);
        add(messagesJScrollPane, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel definitionsMergedCaption;
    private javax.swing.JLabel definitionsMergedLabel;
    private javax.swing.JTable messageTable;
    private javax.swing.JScrollPane messagesJScrollPane;
    private javax.swing.JLabel objectsMergedCaption;
    private javax.swing.JLabel statesMergedLabel;
    private javax.swing.JLabel testsMergedLabel;
    private javax.swing.JLabel objectsMergedLabel;
    private javax.swing.JLabel statesMergedCaption;
    private javax.swing.JPanel statisticsPanel;
    private javax.swing.JLabel testsMergedCaption;
    private javax.swing.JLabel variablesMergedLabel;
    private javax.swing.JLabel variablesMergedCaption;
    // End of variables declaration//GEN-END:variables

}
