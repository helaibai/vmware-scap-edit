package com.g2inc.scap.editor.gui.dialogs.editors.oval.datatype.numeric;
/* ESCAPE Software Copyright 2010 G2, Inc. - All rights reserved.
*
* ESCAPE is open source software distributed under GNU General Public License Version 3.  ESCAPE is not in the public domain 
* and G2, Inc. holds its copyright.  Redistribution and use in source and binary forms, with or without modification, are
* permitted provided that the following conditions are met:

* 1. Redistributions of ESCAPE source code must retain the above copyright notice, this list of conditions and the following disclaimer. 
* 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the ESCAPE Software distribution. 
* 3. Neither the name of G2, Inc. nor the names of any contributors may be used to endorse or promote products derived from this software without specific prior written permission. 

* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
* INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL G2, INC., THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.

* You should have received a copy of the GNU General Public License Version 3 along with this program. 
* If not, see http://www.gnu.org/licenses/ for a copy.
*/

import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.Document;
import javax.swing.text.Element;

import com.g2inc.scap.editor.gui.dialogs.editors.EditorDialog;
import com.g2inc.scap.editor.gui.dialogs.editors.IEditorPage;

public class IntDatatypeEditor extends javax.swing.JPanel implements IEditorPage
{
	private static final long serialVersionUID = 1L;
	
	private EditorDialog parentEditor = null;
    private DocumentListener integerTextDocumentListener = null;

    private void initTextFields()
    {
        integerTextDocumentListener = new DocumentListener()
        {
            private void common(DocumentEvent de)
            {
                String text = intValueTextField.getText();

                if (text.length() > 0)
                {
                    boolean success = false;
                    int val = -1;

                    try
                    {
                        val = Integer.parseInt(text);
                        success = true;
                    }
                    catch(Exception e)
                    {
                        success = false;
                    }


                    if(success)
                    {
                        statusLabel.setText("Value OK");
                        parentEditor.enableOkButton();
                    }
                    else
                    {
                        statusLabel.setText("Number format incorrect");
                        parentEditor.disableOkButton();
                    }
                }
                else
                {
                    statusLabel.setText("ERROR: Number can't be zero-length");
                    parentEditor.disableOkButton();
                }
            }

            public void insertUpdate(DocumentEvent de)
            {
                common(de);
            }

            public void removeUpdate(DocumentEvent de)
            {
                common(de);
            }

            public void changedUpdate(DocumentEvent de)
            {
                common(de);
            }
        };

        intValueTextField.getDocument().addDocumentListener(integerTextDocumentListener);
    }

    private void initComponents2()
    {
        initTextFields();
    }

    /** Creates new form RegexDatatypeEditor */
    public IntDatatypeEditor()
    {
        initComponents();
        initComponents2();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        intValueCaption = new javax.swing.JLabel();
        intValueTextField = new javax.swing.JTextField();
        statusLabel = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        intValueCaption.setText("Integer Value");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 5);
        add(intValueCaption, gridBagConstraints);

        intValueTextField.setPreferredSize(new java.awt.Dimension(255, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.9;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 0, 6);
        add(intValueTextField, gridBagConstraints);

        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statusLabel.setText("jLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 6);
        add(statusLabel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel intValueCaption;
    private javax.swing.JTextField intValueTextField;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables

    public String getData()
    {
        return intValueTextField.getText();
    }

    public void setEditorDialog(EditorDialog editorDialog)
    {
        parentEditor = editorDialog;
    }

    public void setData(Object data)
    {
        if (data == null)
        {
            intValueTextField.setText("");
        } else
        {
            intValueTextField.setText((String) data);
        }

        intValueTextField.requestFocus();

        integerTextDocumentListener.changedUpdate(new DocumentEvent()
        {
            public int getOffset()
            {
                return 0;
            }

            public int getLength()
            {
                return 0;
            }

            public Document getDocument()
            {
                return intValueTextField.getDocument();
            }

            public EventType getType()
            {
                return null;
            }

            public ElementChange getChange(Element arg0)
            {
                return null;
            }
        });
    }
}
