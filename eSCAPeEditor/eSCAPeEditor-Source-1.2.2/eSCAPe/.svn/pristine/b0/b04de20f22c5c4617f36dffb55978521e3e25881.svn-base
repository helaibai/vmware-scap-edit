package com.g2inc.scap.editor.gui.windows.xccdf;

/* ESCAPE Software   Copyright 2010 G2, Inc. - All rights reserved.
*
* ESCAPE is open source software distributed under GNU General Public License Version 3.  ESCAPE is not in the public domain 
* and G2, Inc. holds its copyright.  Redistribution and use in source and binary forms, with or without modification, are
* permitted provided that the following conditions are met:

* 1. Redistributions of ESCAPE source code must retain the above copyright notice, this list of conditions and the following disclaimer. 
* 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the ESCAPE Software distribution. 
* 3. Neither the name of G2, Inc. nor the names of any contributors may be used to endorse or promote products derived from this software without specific prior written permission. 

* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
* INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL G2, INC., THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.

* You should have received a copy of the GNU General Public License Version 3 along with this program. 
* If not, see http://www.gnu.org/licenses/ for a copy.
*/

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

import javax.swing.JFrame;

import com.g2inc.scap.editor.gui.windows.common.ChangeNotifierPanel;
import com.g2inc.scap.library.domain.SupportedInputLanguages;
import com.g2inc.scap.library.domain.xccdf.OverridableWithLang;

public class LangOverridePanel extends ChangeNotifierPanel implements ActionListener, ItemListener
{

	private static final long serialVersionUID = 1L;
	private com.g2inc.scap.library.domain.xccdf.OverridableWithLang text = null;
    private JFrame parentWin = null;

    /** Creates new form DefinitionDetailTab */
    public LangOverridePanel()
    {
        initComponents();
        initComponents2();
    }

    @Override
    public void actionPerformed(ActionEvent ae)
    {
        Object src = ae.getSource();

        if (src == langComboBox)
        {
            String lang = (String) langComboBox.getSelectedItem();
            if (lang != null)
            {
                text.setLang(lang);
                notifyRegisteredListeners();
            }
        }
    }

    private void initLangCombo()
    {
        String[] langs = SupportedInputLanguages.getLangs();
        for (int x = 0; x < langs.length; x++)
        {
            langComboBox.addItem(langs[x]);
        }
        langComboBox.setSelectedItem(SupportedInputLanguages.getDefault());
        langComboBox.setToolTipText("Note: Languages listed are only those supported by this machine.");
    }

    @Override
    public void itemStateChanged(ItemEvent ie)
    {
        Object src = ie.getSource();

        if(src == overrideCheckBox)
        {
            text.setOverride(ie.getStateChange() == ItemEvent.SELECTED);
            notifyRegisteredListeners();
        }
    }

    private void initOverride()
    {
        overrideCheckBox.addItemListener(this);
    }

    public final void initComponents2()
    {
        initLangCombo();
        initOverride();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        langCaption = new javax.swing.JLabel();
        langComboBox = new javax.swing.JComboBox();
        overrideCheckBox = new javax.swing.JCheckBox();

        setLayout(new java.awt.GridBagLayout());

        langCaption.setText("xml:lang");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        add(langCaption, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
        add(langComboBox, gridBagConstraints);

        overrideCheckBox.setText("override?");
        overrideCheckBox.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        add(overrideCheckBox, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel langCaption;
    private javax.swing.JComboBox langComboBox;
    private javax.swing.JCheckBox overrideCheckBox;
    // End of variables declaration//GEN-END:variables

    @Override
    public JFrame getParentWin()
    {
        return parentWin;
    }

    @Override
    public void setParentWin(JFrame parentWin)
    {
        this.parentWin = parentWin;
    }

    public OverridableWithLang getData()
    {
        return text;
    }

    public void setData(OverridableWithLang text)
    {
        this.text = text;
        overrideCheckBox.setSelected(text.isOverride());
        String lang = text.getLang();
        langComboBox.setSelectedItem(lang);
        langComboBox.addActionListener(this);
    }
}
