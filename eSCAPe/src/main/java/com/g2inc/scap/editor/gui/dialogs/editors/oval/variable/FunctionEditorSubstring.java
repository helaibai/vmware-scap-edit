package com.g2inc.scap.editor.gui.dialogs.editors.oval.variable;
/* ESCAPE Software Copyright 2010 G2, Inc. - All rights reserved.
*
* ESCAPE is open source software distributed under GNU General Public License Version 3.  ESCAPE is not in the public domain 
* and G2, Inc. holds its copyright.  Redistribution and use in source and binary forms, with or without modification, are
* permitted provided that the following conditions are met:

* 1. Redistributions of ESCAPE source code must retain the above copyright notice, this list of conditions and the following disclaimer. 
* 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the ESCAPE Software distribution. 
* 3. Neither the name of G2, Inc. nor the names of any contributors may be used to endorse or promote products derived from this software without specific prior written permission. 

* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
* INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL G2, INC., THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.

* You should have received a copy of the GNU General Public License Version 3 along with this program. 
* If not, see http://www.gnu.org/licenses/ for a copy.
*/

import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

import com.g2inc.scap.editor.gui.dialogs.editors.EditorDialog;
import com.g2inc.scap.editor.gui.resources.EditorMessages;
import com.g2inc.scap.library.domain.oval.OvalFunction;
import com.g2inc.scap.library.domain.oval.OvalFunctionSubstring;

public class FunctionEditorSubstring extends FunctionEditor
{

    private void initComponents2()
    {
        initTextFields();
    }

    public FunctionEditorSubstring()
    {
        initComponents();
        initComponents2();
//        setOvalFunction(function);
    }

    private void initTextFields()
    {
        startTextField.getDocument().addDocumentListener(new DocumentListener()
        {

            public void insertUpdate(DocumentEvent de)
            {
                common(de);
            }

            public void removeUpdate(DocumentEvent de)
            {
                common(de);
            }

            public void changedUpdate(DocumentEvent de)
            {
                common(de);
            }

            private void common(DocumentEvent de)
            {
                String startString = startTextField.getText();
                int start = 0;
                errorLabel.setText("");
                try {
                    start = (startString == null ? 0: Integer.parseInt(startString));
                } catch (NumberFormatException e) {
                    errorLabel.setText("Invalid numeric value: " + startString);
                }
                ((OvalFunctionSubstring) ovalFunction).setSubstringStart(start);
            }
        });
        lengthTextField.getDocument().addDocumentListener(new DocumentListener()
        {

            public void insertUpdate(DocumentEvent de)
            {
                common(de);
            }

            public void removeUpdate(DocumentEvent de)
            {
                common(de);
            }

            public void changedUpdate(DocumentEvent de)
            {
                common(de);
            }

            private void common(DocumentEvent de)
            {
                String lengthString = lengthTextField.getText();
                int length = 0;
                errorLabel.setText("");
                try {
                    length = (lengthString == null ? 0: Integer.parseInt(lengthString));
                } catch (NumberFormatException e) {
                    errorLabel.setText("Invalid numeric value: " + lengthString);
                }
                ((OvalFunctionSubstring) ovalFunction).setSubstringLength(length);
            }
        });
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        functionEditorPanel1 = new com.g2inc.scap.editor.gui.dialogs.editors.oval.variable.FunctionEditorPanel();
        startCaption = new javax.swing.JLabel();
        startTextField = new javax.swing.JTextField();
        lengthCaption = new javax.swing.JLabel();
        lengthTextField = new javax.swing.JTextField();
        errorLabel = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.8;
        add(functionEditorPanel1, gridBagConstraints);

        startCaption.setText("start");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        add(startCaption, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.8;
        add(startTextField, gridBagConstraints);

        lengthCaption.setText("length");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        add(lengthCaption, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        add(lengthTextField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(3, 9, 0, 0);
        add(errorLabel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel errorLabel;
    private com.g2inc.scap.editor.gui.dialogs.editors.oval.variable.FunctionEditorPanel functionEditorPanel1;
    private javax.swing.JLabel lengthCaption;
    private javax.swing.JTextField lengthTextField;
    private javax.swing.JLabel startCaption;
    private javax.swing.JTextField startTextField;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setEditorDialog(EditorDialog editorDialog)
    {
        parentEditor = editorDialog;
        parentEditor.setTitle(EditorMessages.OVAL + " 'substring' Function Editor");
    }

    @Override
    public void setOvalFunction(OvalFunction function) {
        this.ovalFunction = function;
        functionEditorPanel1.setOvalFunction(function);
        if (function instanceof OvalFunctionSubstring) {
            OvalFunctionSubstring substringFunction = (OvalFunctionSubstring) function;
            startTextField.setText(Integer.toString(substringFunction.getSubstringStart()));
            lengthTextField.setText(Integer.toString(substringFunction.getSubstringLength()));
        } else {
            throw new IllegalArgumentException("Expected OvalFunctionSubstring, got " + ovalFunction.getClass().getName());
        }
    }

}
