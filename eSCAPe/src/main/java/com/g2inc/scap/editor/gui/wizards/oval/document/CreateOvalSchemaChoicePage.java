package com.g2inc.scap.editor.gui.wizards.oval.document;

/* Copyright (c) 2016 - 2016. VMware, Inc. All rights reserved.
* 
* This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License version 3.0 
* as published by the FreeSoftware Foundation This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
* without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License version 3.0 
* for more details. You should have received a copy of the GNU General Public License version 3.0 along with this program; if not, write to
* the Free Software Foundation, Inc., 675 Mass Avenue, Cambridge, MA 02139, USA.
*/
/* ESCAPE Software Copyright 2010 G2, Inc. - All rights reserved.
*
* ESCAPE is open source software distributed under GNU General Public License Version 3.  ESCAPE is not in the public domain 
* and G2, Inc. holds its copyright.  Redistribution and use in source and binary forms, with or without modification, are
* permitted provided that the following conditions are met:

* 1. Redistributions of ESCAPE source code must retain the above copyright notice, this list of conditions and the following disclaimer. 
* 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the ESCAPE Software distribution. 
* 3. Neither the name of G2, Inc. nor the names of any contributors may be used to endorse or promote products derived from this software without specific prior written permission. 

* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
* INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL G2, INC., THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.

* You should have received a copy of the GNU General Public License Version 3 along with this program. 
* If not, see http://www.gnu.org/licenses/ for a copy.
*/

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JComboBox;

import com.g2inc.scap.editor.gui.resources.EditorMessages;
import com.g2inc.scap.editor.gui.wizards.Wizard;
import com.g2inc.scap.editor.gui.wizards.WizardPage;
import com.g2inc.scap.library.domain.SCAPDocumentTypeEnum;

public class CreateOvalSchemaChoicePage extends WizardPage
{
    private CreateOvalWizard parentWiz = null;

    private void initComponents2()
    {
        schemaCombo.removeAllItems();
        for (SCAPDocumentTypeEnum schemaType : SCAPDocumentTypeEnum.values())
        {
            if (schemaType.toString().startsWith("OVAL_5"))
            {
                schemaCombo.addItem(schemaType);
            }
        }

        schemaCombo.setSelectedItem(SCAPDocumentTypeEnum.OVAL_511);

        schemaCombo.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                parentWiz.setSchemaType((SCAPDocumentTypeEnum)schemaCombo.getSelectedItem());
                parentWiz.enableNextButton();
            }
        });
    }

    /** Creates new form ChoseVariableTypeWizardPage */
    public CreateOvalSchemaChoicePage()
    {
        initComponents();
        initComponents2();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        notePanel = new javax.swing.JPanel();
        noteLabel = new javax.swing.JLabel();
        schemaChoicePanel = new javax.swing.JPanel();
        choiceLabel = new javax.swing.JLabel();
        schemaCombo = new javax.swing.JComboBox();

        setMinimumSize(new java.awt.Dimension(250, 300));
        setPreferredSize(new java.awt.Dimension(250, 300));
        setLayout(new java.awt.GridBagLayout());

        notePanel.setLayout(new java.awt.GridBagLayout());

        noteLabel.setText("<HTML>Select an OVAL Schema Version for the new OVAL Document</HTML>");
        noteLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        notePanel.add(noteLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.01;
        add(notePanel, gridBagConstraints);

        schemaChoicePanel.setLayout(new java.awt.GridBagLayout());

        choiceLabel.setText("OVAL Schema Version");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(8, 6, 5, 0);
        schemaChoicePanel.add(choiceLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 12);
        schemaChoicePanel.add(schemaCombo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.8;
        add(schemaChoicePanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    
    @Override
	public Object getData()
    {
        return schemaCombo.getSelectedItem();
    }

    
    @Override
	public void setData(Object data)
    {
    }

    
    @Override
	public void setWizard(Wizard wizard)
    {
        parentWiz = (CreateOvalWizard) wizard;
        setSatisfied(true);
        parentWiz.setSchemaType((SCAPDocumentTypeEnum)schemaCombo.getSelectedItem());
        parentWiz.enableNextButton();
    }

    
    @Override
	public String getPageTitle()
    {
        return EditorMessages.OVAL + " Schema Version";
    }

    public JComboBox getSchemaCombo()
    {
        return schemaCombo;
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel choiceLabel;
    private javax.swing.JLabel noteLabel;
    private javax.swing.JPanel notePanel;
    private javax.swing.JPanel schemaChoicePanel;
    private javax.swing.JComboBox schemaCombo;
    // End of variables declaration//GEN-END:variables

    
    @Override
	public void performFinish()
    {
    }
}
