package com.g2inc.scap.editor.gui.dialogs.editors.xccdf;
/* ESCAPE Software Copyright 2010 G2, Inc. - All rights reserved.
*
* ESCAPE is open source software distributed under GNU General Public License Version 3.  ESCAPE is not in the public domain 
* and G2, Inc. holds its copyright.  Redistribution and use in source and binary forms, with or without modification, are
* permitted provided that the following conditions are met:

* 1. Redistributions of ESCAPE source code must retain the above copyright notice, this list of conditions and the following disclaimer. 
* 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the ESCAPE Software distribution. 
* 3. Neither the name of G2, Inc. nor the names of any contributors may be used to endorse or promote products derived from this software without specific prior written permission. 

* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
* INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL G2, INC., THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.

* You should have received a copy of the GNU General Public License Version 3 along with this program. 
* If not, see http://www.gnu.org/licenses/ for a copy.
*/

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JPanel;
import javax.swing.event.DocumentEvent;

import com.g2inc.scap.editor.gui.choosers.xccdf.ValueChooser;
import com.g2inc.scap.editor.gui.dialogs.editors.EditorDialog;
import com.g2inc.scap.editor.gui.dialogs.editors.IEditorPage;
import com.g2inc.scap.editor.gui.windows.common.DocumentListenerAdaptor;
import com.g2inc.scap.library.domain.xccdf.ProfileSetValue;
import com.g2inc.scap.library.domain.xccdf.Value;

public class ProfileSetValueEditor extends JPanel implements IEditorPage
{
    private EditorDialog parentEditor = null;
    private ProfileSetValue profileSetValue = null;

    private void initButtons()
    {
        chooseValueButton.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent ae)
            {
                ValueChooser chooser = new ValueChooser(true);
                chooser.setSource(profileSetValue.getSCAPDocument(), null, null);
                chooser.setVisible(true);

                if(!chooser.wasCancelled())
                {
                    Value value = (Value) chooser.getChosen();
                    selectedIdLabel.setText(value.getId());
					profileSetValue.setIdRef(value.getId());
                    parentEditor.enableOkButton();
                }
            }
        });
    }

	private void initTextFields() {
		valueToSetTextField.getDocument().addDocumentListener(new DocumentListenerAdaptor() {
			@Override
			public void changed(DocumentEvent de) {
				profileSetValue.setValue(valueToSetTextField.getText());
			}
		});
	}

    private void initComponents2()
    {
        initButtons();
		initTextFields();
    }

    public ProfileSetValueEditor()
    {
        initComponents();
        initComponents2();;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        selectedIdCaption1 = new javax.swing.JLabel();
        selectedIdLabel = new javax.swing.JLabel();
        chooseValueButton = new javax.swing.JButton();
        valueToSetCaprion = new javax.swing.JLabel();
        valueToSetTextField = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        selectedIdCaption1.setText("Selected Id:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(9, 10, 0, 2);
        add(selectedIdCaption1, gridBagConstraints);

        selectedIdLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        selectedIdLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        selectedIdLabel.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        selectedIdLabel.setMinimumSize(new java.awt.Dimension(128, 255));
        selectedIdLabel.setPreferredSize(new java.awt.Dimension(128, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.6;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 4, 4);
        add(selectedIdLabel, gridBagConstraints);

        chooseValueButton.setText("Choose Value");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 5, 5);
        add(chooseValueButton, gridBagConstraints);

        valueToSetCaprion.setText("Value Text:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(9, 10, 0, 2);
        add(valueToSetCaprion, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.9;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 0, 5);
        add(valueToSetTextField, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseValueButton;
    private javax.swing.JLabel selectedIdCaption1;
    private javax.swing.JLabel selectedIdLabel;
    private javax.swing.JLabel valueToSetCaprion;
    private javax.swing.JTextField valueToSetTextField;
    // End of variables declaration//GEN-END:variables

    public ProfileSetValue getData() {
		return profileSetValue;
    }

    public void setEditorDialog(EditorDialog editorDialog)
    {
        parentEditor = editorDialog;
        parentEditor.setTitle("Profile Set Value Editor");
    }

    public void setData(Object data)
    {
		profileSetValue = (ProfileSetValue) data;
		if (profileSetValue != null) {
			String selectedId = profileSetValue.getIdRef();
			if (selectedId != null) {
				selectedIdLabel.setText(selectedId);
			}
			valueToSetTextField.setText(profileSetValue.getValue());
		}
    }

}
